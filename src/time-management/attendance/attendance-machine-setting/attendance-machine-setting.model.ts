import * as mongoose from "mongoose"
import { Company } from "src/company/model"
import { attendanceTypes, dateFormatTypes, delimiters, fileTypes, flagTypes, timeFormatTypes } from "src/enum"
import { User } from "src/users/user.model"

export const AttendanceMachineSettingSchema =  new mongoose.Schema({
    company: {type:mongoose.Schema.Types.ObjectId, ref: "Company"},
    attendanceType: {type: String, enum: attendanceTypes},
    startingRow: {type: String},
    name: {type: String},
    fileType: {type: String, enum: fileTypes},
    delimiter: {type: String, enum: delimiters},
    barcode: {type: Number},
    barcodeLength: {type: Number},
    checkIn: {type: Number},
    checkInLength: {type: Number},
    checkOut: {type: Number},
    checkOutLength: {type: Number},
    date: {type: Number},
    dateLength: {type: Number},
    dateFormat: {type: String, enum: dateFormatTypes},
    timeFormat: {type: String, enum: timeFormatTypes},
    time: {type: Number},
    timeLength: {type: Number},
    flagType: {type: String, enum: flagTypes},
    mode: {type: Number},
    modeLength: {type: Number},
    flagIn: {type: Date},
    flagOut: {type: Date},
    inAfter: {type: Date},
    inBefore: {type: Date},
    outAfter: {type: Date},
    outBefore: {type: Date},
    onOff: {type: Boolean},
    createdAt: {type: Date, default: Date.now},
    createdBy: { type: mongoose.Schema.Types.ObjectId, ref: "User"}
})

export interface AttendanceMachineSetting extends mongoose.Document{
    readonly company: Company | mongoose.Schema.Types.ObjectId,
    readonly attendanceType: attendanceTypes|string,
    readonly startingRow: string,
    readonly name: string,
    readonly fileType: string | fileTypes,
    readonly delimiter: string | delimiters,
    readonly barcode: number,
    readonly barcodeLength: number,
    readonly checkIn: number,
    readonly checkInLength: number,
    readonly checkOut: number,
    readonly checkOutLength: number,
    readonly date: number,
    readonly dateLength: number,
    readonly dateFormat: dateFormatTypes|string,
    readonly timeFormat: timeFormatTypes|string,
    readonly time: number,
    readonly timeLength: number,
    readonly flagType: string | flagTypes,
    readonly mode: number,
    readonly modeLength: number,
    readonly flagIn: Date,
    readonly flagOut: Date,
    readonly inAfter: Date,
    readonly inBefore: Date,
    readonly outAfter: Date,
    readonly outBefore: Date
    readonly onOff: Boolean,
    readonly createdAt: Date,
    readonly createdBy: User | mongoose.Schema.Types.ObjectId,
}